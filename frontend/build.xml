<project xmlns:ivy="antlib:org.apache.ivy.ant" name="passwdhash-cli" default="release">
	<property name="dir.src" location="src"/>
	<property name="dir.bin" location="bin"/>
	<property name="dir.lib" location="lib"/>
	<property name="dir.etc" location="etc"/>
	<property name="dir.out" location="dist"/>
	<property name="dir.root" location=".."/>
	<property name="dir.core" location="../core/dist"/>

	<loadresource property="jdk.version">
		<propertyresource name="ant.java.version"/>
		<filterchain>
			<replaceregex pattern="^1\.(\d)$" replace="\1"/>
		</filterchain>
	</loadresource>

	<fileset dir="${dir.lib}" includes="*.jar" id="fileset.jars"/>
	<fileset dir="${dir.core}" includes="passwdhash*-jdk${jdk.version}.jar" id="fileset.core"/>

	<target name="release" depends="clean,tests,jar">
		<echo message="Release done."/>
	</target>

	<target name="clean">
		<delete includeemptydirs="true" verbose="true">
			<fileset dir="${dir.bin}" includes="**/*" excludes="**/.gitkeep" defaultexcludes="false"/>
			<fileset dir="${dir.out}" includes="**/*" excludes="**/.gitkeep" defaultexcludes="false"/>
			<fileset dir="${dir.lib}" includes="**/*" excludes="**/.gitkeep" defaultexcludes="false"/>
		</delete>
		<ivy:cleancache/>
	</target>

	<target name="check-library">
		<fail message="Error: Must build the 'passwdhash' library first!">
			<condition>
				<equals arg1="${toString:fileset.core}" arg2="" trim="true"/>
			</condition>
		</fail>
	</target>

	<target name="ivy-retrieve">
		<delete includeemptydirs="true" verbose="true">
			<fileset dir="${dir.lib}" includes="**/*" excludes="**/.gitkeep" defaultexcludes="false"/>
		</delete>
		<ivy:resolve refresh="true" file="${basedir}/ivy.xml"/>
		<ivy:retrieve pattern="${dir.lib}/[artifact]-[revision].[ext]" file="${basedir}/ivy.xml"/>
	</target>

	<target name="compile" depends="check-library,ivy-retrieve">
		<delete includeemptydirs="true" verbose="true">
			<fileset dir="${dir.bin}" includes="**/*" excludes="**/.gitkeep" defaultexcludes="false"/>
		</delete>
		<javac srcdir="${dir.src}" destdir="${dir.bin}" includeantruntime="false">
			<classpath>
				<path>
					<fileset refid="fileset.jars"/>
					<fileset refid="fileset.core"/>
				</path>
			</classpath>
		</javac>
	</target>

	<target name="jar" depends="compile">
		<delete includeemptydirs="true" verbose="true">
			<fileset dir="${dir.out}" includes="**/*" excludes="**/.gitkeep" defaultexcludes="false"/>
		</delete>
		<jar destfile="${dir.out}/${ant.project.name}-jdk${jdk.version}.jar" basedir="${dir.bin}">
			<zipfileset src="${dir.etc}/jar-in-jar-loader.zip"/>
			<fileset refid="fileset.jars"/>
			<fileset refid="fileset.core"/>
			<fileset dir="${dir.root}" includes="LICENSE"/>
			<manifest>
				<attribute name="Main-Class" value="org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader"/>
				<attribute name="Class-Path" value="."/>
				<attribute name="Rsrc-Main-Class" value="de.fraunhofer.sit.passwordhash.cli.Main"/>
				<attribute name="Rsrc-Class-Path" value="./ ${toString:fileset.core} ${toString:fileset.jars}"/>
			</manifest>
		</jar>
	</target>

	<target name="tests"/>
</project>
